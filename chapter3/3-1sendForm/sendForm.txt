「GET」と「POST」
GET いつどこからどうアクセスしても常に同じ結果が返される。
POST そのとき、その状況での表示。そのとき一度限りのアクセスのようなもの。
GET 常にAが返ってくる
POST A,B,Cが返ってくる

urlオブジェクトはqueryparameterをparseするのにurlというオブジェクトを使用。
querystringオブジェクトは普通のテキストをパース処理をするためのもの。

GETかPOSTかはmethodできめられる。

post送信されたときの処理
「イベント」を使った処理。
イベントというのは、様々な動作に応じて発生する信号のようなもの。
オブジェクトには「こういう動作のときはこのイベントが発生する」という仕組みが組み込まれている。
イベントに応じて呼び出される関数を設定することができる。

オブジェクト.on(イベント,関数);

クライアントから送信された情報というのは、requestオブジェクトにまとめられている。
requestにはクライアントから送られたデータを受信する際のイベントが用意されている。

'data'イベント=>クライアントからデータを受け取ると発生するイベント
'end'イベント=>データの受け取りが完了すると発生するイベント

「インターネットでは､データは一度にまとめて送られてくるというわけではない」
長いテキストなどでは、すこしずつ何回かに分かれてデータがおくられてくることもある。
なので、dataイベントで受け取ったデータを変数などに保管していき、
endイベントがおきたらそれまでおくられたものを全てまとめてエンコードして使う。

用意した変数bodyにクライアントから受け取ったデータを順次bodyに追加していく。

endイベントに割り当てる関数には引数がない。
全てのデータを受け取った後なので、もう渡されるデータはない。
ただし、受け取ったデータ(body変数)は、実はそのままでは使えない。

クライアントからは、クエリーテキストと呼ばれる形式で送られてくる。
それをエンコードしないといけない。
それを行っているのがqsオブジェクトの「parse」。
qs.parse(body)により、受け取ったデータ(body)をエンコードし、それぞれのパラメータの値を整理した
オブジェクトに変換してくれる。